apply plugin: 'idea'
apply plugin: 'java'
buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "io.qameta.allure:allure-gradle:2.8.1"
    }
}

apply plugin: "io.qameta.allure"

allure {
    version = '2.2.1'
    autoconfigure = true
    aspectjweaver = true
    allureJavaVersion = '2.13.1'
}

group 'mobileWorkshop'
version '1.0-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
    mavenLocal()
    jcenter()
}
configurations {
    agent
}

dependencies {
    compile group: 'io.appium', name: 'java-client', version: '7.3.0'
    compile group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '3.141.59'
    testCompile group: 'org.testng', name: 'testng', version: '6.14.3'
      testCompile group: 'junit', name: 'junit', version: '4.12'
    compile group: 'io.qameta.allure', name: 'allure-testng', version: '2.13.1'
    compile group: 'org.aspectj', name: 'aspectjrt', version: '1.9.5'
    agent "org.aspectj:aspectjweaver:1.9.5"
    testCompile 'org.apache.pdfbox:pdfbox:2.0.0'
    testCompile 'org.hamcrest:hamcrest-all:1.3'
    testCompile 'com.codeborne:selenide:3.5'
    testCompile 'ru.yandex.qatools.allure:allure-testng-adaptor:1.4.11'
}


test{
    useTestNG()
    jvmArgs "-javaagent:${configurations.agent.singleFile}"
    scanForTestClasses = false
    include '**/*'
    testLogging {
        showStandardStreams = true
        // log results to "build/test-results" directory
        exceptionFormat "full"
        events "started", "passed", "skipped", "failed", "standardOut", "standardError"
    }
}
